<!doctype html>
<html lang="{{ lang or metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">
		<link rel="icon" href="/img/favicon.ico" type="image/x-icon">

		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=GFS+Didot&display=swap" rel="stylesheet">


		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:site" content="@elswork">
		<meta name="twitter:title" content="{{ metadata.title }}">
		<meta name="twitter:description" content="{{ metadata.description }}">
		<meta name="twitter:image" content="{{ metadata.url }}img/anticitera.webp">

		<meta property="og:title" content="{{ metadata.title }}">
		<meta property="og:description" content="{{ metadata.description }}">
		<meta property="og:image" content="{{ metadata.url }}img/anticitera.webp">
		<meta property="og:url" content="{{ metadata.url }}">
		<meta property="og:type" content="website">

		{#- Hreflang tags for multilingual support #}
		{%- set hreflangUrls = page.url | hreflangUrls(collections) %}
		{%- for lang, url in hreflangUrls %}
		<link rel="alternate" hreflang="{{ lang }}" href="{{ metadata.url }}{{ url | replace('/', '', 1) }}">
		{%- endfor %}
		{#- x-default points to Spanish version if it exists #}
		{%- if hreflangUrls.es %}
		<link rel="alternate" hreflang="x-default" href="{{ metadata.url }}{{ hreflangUrls.es | replace('/', '', 1) }}">
		{%- endif %}


		{#- Uncomment this if you’d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{%- css %}{% include "public/css/language-selector.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{%- css %}{% include "node_modules/lite-youtube-embed/src/lite-yt-embed.css" %}{% endcss %}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
				<style>{% getBundle "css" %}</style>

		{%- js %}{% include "node_modules/lite-youtube-embed/src/lite-yt-embed.js" %}{% endjs %}
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}
		<link rel="stylesheet" href="/css/bundle.css">

		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id={{ metadata.analytics }}"></script>
		<script>
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		gtag('js', new Date());

		gtag('config', '{{ metadata.analytics }}');
		</script>
		<!-- Google Tag Manager -->
		<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
		new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
		j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
		'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','{{ metadata.googletag }}');gtag('config', 'AW-956770534');</script>
		<!-- End Google Tag Manager -->
	</head>
	<body>
		<!-- Google Tag Manager (noscript) -->
		<noscript><iframe src="https://www.googletagmanager.com/ns.html?id={{ metadata.googletag }}"
		height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
		<!-- End Google Tag Manager (noscript) -->

		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header>
			<!-- Añadir la imagen del banner aquí -->
            <img src="/img/Cabecera.webp" alt="Cabecera Proyecto .IA Isla Anticitera">
			<a href="/" class="home-link">{{ metadata.title }}</a>			
			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
				{%- for entry in collections.all | eleventyNavigation %}
					{# English pages show nav entries with URLs starting with /en/ #}
					{%- if lang == 'en' and entry.url and entry.url.startsWith('/en/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# French pages show nav entries with URLs starting with /fr/ #}
					{%- elif lang == 'fr' and entry.url and entry.url.startsWith('/fr/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Portuguese pages show nav entries with URLs starting with /pt/ #}
					{%- elif lang == 'pt' and entry.url and entry.url.startsWith('/pt/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Italian pages show nav entries with URLs starting with /it/ #}
					{%- elif lang == 'it' and entry.url and entry.url.startsWith('/it/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# German pages show nav entries with URLs starting with /de/ #}
					{%- elif lang == 'de' and entry.url and entry.url.startsWith('/de/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Greek pages show nav entries with URLs starting with /el/ #}
					{%- elif lang == 'el' and entry.url and entry.url.startsWith('/el/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Chinese pages show nav entries with URLs starting with /cn/ #}
					{%- elif lang == 'cn' and entry.url and entry.url.startsWith('/cn/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Russian pages show nav entries with URLs starting with /ru/ #}
					{%- elif lang == 'ru' and entry.url and entry.url.startsWith('/ru/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{# Spanish pages show nav entries with URLs NOT starting with /en/ or /fr/ etc. #}
					{%- elif lang == 'es' and entry.url and not entry.url.startsWith('/en/') and not entry.url.startsWith('/fr/') and not entry.url.startsWith('/pt/') and not entry.url.startsWith('/it/') and not entry.url.startsWith('/de/') and not entry.url.startsWith('/el/') and not entry.url.startsWith('/cn/') and not entry.url.startsWith('/ru/') %}
						<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{%- endif %}
				{%- endfor %}
				</ul>
				{%- set hreflangUrls = page.url | hreflangUrls(collections) %}
				{% languageSelector lang, page.url, languages, hreflangUrls %}
			</nav>
		</header>

		<main id="skip">
		<ul class="post-metadata">
			<li>				
				<button onclick="window.open('https://github.com/elswork/anticitera.deft.work/edit/main{{ page.inputPath | replace('./', '/') }}', '_blank')" id="edit-github-btn">
					{{ home[lang].buttons.edit_github }} {% icon "simpleicon:github", class="icon" %} GitHub
				</button>
				<button onclick="window.open('https://chng.it/hqCyzBpwgW', '_blank')" id="vote-change-org">
					{{ home[lang].buttons.vote_change_org }} {% icon "simpleicon:c", class="icon" %}. Change.org
				</button>
				<button onclick="window.open('https://t.me/+oAeZGMsePDg2ZDI0', '_blank')" id="telegram-group">
					{{ home[lang].buttons.telegram_group }} {% icon "simpleicon:telegram", class="icon" %} Telegram
				</button>
				<button onclick="window.open('https://docs.google.com/forms/d/e/1FAIpQLSeptFS3-XMVTeBFQzDEl1O55hkXhtOgYmMSEfpLLJk11UZEOA/viewform?usp=sf_link', '_blank')" id="suscribe-mail-list">
					{{ home[lang].buttons.suscribe_mail_list }} {% icon "simpleicon:gmail", class="icon" %} Correo
				</button>
			</li>
		</ul>
		<br>
			{{ content | safe }}
		<br>
		{% for issue in issues %}
			<button id="toggle-comments-btn">{{ home[lang].buttons.view_comments }}</button>
			<div class="issue-container" style="display: none;">
				<div class="issue-header">
					<h3>{{ issue.title }}</h3>
					<div class="issue-user">						
						<a href="{{ issue.user.html_url }}" target="_blank" class="issue-author-link"><img src="{{ issue.user.avatar_url }}" alt="{{ issue.user.login }}" class="issue-author-avatar">{{ issue.user.login }}</a>
					</div>
				</div>
				<div class="issue-body">{{ issue.body | markdown | safe }}</div>
				<div class="issue-footer">
					<div class="issue-footer-left">
						<span class="issue-state">
							{% if issue.state == 'open' %}🟢{% else %}🔴{% endif %}							
						</span>
						<span class="issue-comments">💬{{ issue.comments }}</span>
						<span class="issue-reactions">❤️{{ issue.reactions.total_count }}</span>
					</div>
					<div class="issue-footer-right">
						<span class="issue-created-at">
							🕒 {{ issue.created_at | date('dd/MM/yyyy HH:mm') }}
							<span class="issue-updated-at">🔄 {{ issue.updated_at | date('dd/MM/yyyy HH:mm') }}</span>
						</span>
						<a href="{{ issue.html_url }}" target="_blank" class="issue-link">Ver comentario</a>
					</div>
				</div>
			</div>
			<button onclick="window.open('https://github.com/elswork/anticitera.deft.work/issues/new', '_blank')" class="issue-link-create">{{ home[lang].buttons.new_comment }}</button>
		{% endfor %}

		</main>

		<footer>
			<div class="container">
				<div class="social-media">
					<!-- Botones para redes sociales -->
					<button onclick="window.open('https://twitter.com/elswork', '_blank')" class="twitter-icon">{% icon "simpleicon:x", class="icon_plus" %}</button>
					<button onclick="window.open('https://github.dev/elswork/anticitera.deft.work', '_blank')" class="vscode-icon">{% icon "simpleicon:visualstudiocode", class="icon_plus" %}</button>
					<button onclick="window.open('https://github.com/elswork/anticitera.deft.work', '_blank')" class="github-icon">{% icon "simpleicon:github", class="icon_plus" %}</button>
					<button onclick="window.open('https://www.reddit.com/r/IslaAnticitera', '_blank')" class="reddit-icon">{% icon "simpleicon:reddit", class="icon_plus" %}</button>
					<button onclick="window.open('/feed/feed.json', '_blank')" class="json-icon">{% icon "simpleicon:json", class="icon_plus" %}</button>
					<button onclick="window.open('/feed/feed.xml', '_blank')" class="feedly-icon">{% icon "simpleicon:feedly", class="icon_plus" %}</button>
				</div>
				<p>.IA Isla Anticitera &copy; {{ 'now' | currentYear }}</p>
				<div class="share-links">
					<!-- Botones para compartir -->
					<button onclick="window.open('https://twitter.com/intent/tweet?url=https://anticitera.deft.work&text=.IA%20Isla%20Anticitera', '_blank')" class="twitter-icon">{% icon "simpleicon:x", class="icon_plus" %}</button>
					<button onclick="window.open('https://www.linkedin.com/shareArticle?mini=true&url=https://anticitera.deft.work&title=.IA%20Isla%20Anticitera&summary=Descripción%20personalizada', '_blank')" class="linkedin-icon">{% icon "simpleicon:linkedin", class="icon_plus" %}</button>
					<button onclick="window.open('https://api.whatsapp.com/send?text=https://anticitera.deft.work', '_blank')" class="whatsapp-icon">{% icon "simpleicon:whatsapp", class="icon_plus" %}</button>
					<button onclick="window.open('https://www.facebook.com/sharer/sharer.php?u=https://anticitera.deft.work', '_blank')" class="facebook-icon">{% icon "simpleicon:facebook", class="icon_plus" %}</button>
				</div>
			</div>
		</footer>

		<!-- Current page: {{ page.url | htmlBaseUrl }} -->
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				// Emoji support detection
				function hasEmojiSupport() {
					const canvas = document.createElement('canvas');
					const ctx = canvas.getContext('2d');
					canvas.width = 20;
					canvas.height = 20;
					
					ctx.textBaseline = 'middle';
					ctx.textAlign = 'center';
					ctx.fillStyle = '#000';
					ctx.font = '16px Arial';
					ctx.fillText('🇪🇸', 10, 10);
					
					const imageData = ctx.getImageData(0, 0, 20, 20);
					const data = imageData.data;
					
					// Check if pixels have color (not just black/white)
					for (let i = 0; i < data.length; i += 4) {
						const r = data[i];
						const g = data[i + 1];
						const b = data[i + 2];
						const a = data[i + 3];
						
						if (a > 0 && (r !== g || g !== b)) {
							return true;
						}
					}
					return false;
				}
				
				// If no emoji support, show SVG flags
				if (!hasEmojiSupport()) {
					document.querySelectorAll('.flag-emoji').forEach(emoji => {
						emoji.style.display = 'none';
					});
					document.querySelectorAll('.flag-svg').forEach(svg => {
						svg.style.display = 'block';
					});
				}

				// Language selector functionality
				const languageSelector = document.querySelector('.language-selector');
				if (languageSelector) {
					const button = languageSelector.querySelector('.language-selector-button');
					const dropdown = languageSelector.querySelector('.language-dropdown');
					
					button.addEventListener('click', (e) => {
						e.stopPropagation();
						languageSelector.classList.toggle('open');
					});
					
					// Close dropdown when clicking outside
					document.addEventListener('click', () => {
						languageSelector.classList.remove('open');
					});
					
					// Prevent dropdown from closing when clicking inside it
					dropdown.addEventListener('click', (e) => {
						e.stopPropagation();
					});
					
					// Close dropdown on escape key
					document.addEventListener('keydown', (e) => {
						if (e.key === 'Escape') {
							languageSelector.classList.remove('open');
						}
					});
				}

				// Bucle para manejar cada botón "Ver Comentarios"
				document.querySelectorAll('[id^="toggle-comments-btn"]').forEach(btn => {
					btn.addEventListener('click', function() {
						var container = this.nextElementSibling; // Selecciona el siguiente elemento después del botón, que debería ser .issue-container
						if (container.style.display === 'none' || container.style.display === '') {
							container.style.display = 'block';
						} else {
							container.style.display = 'none';
						}
					});
				});
			});
		</script>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const galleries = document.querySelectorAll('.gallery');

				galleries.forEach(gallery => {
					const images = gallery.querySelectorAll('img');
					let currentImageIndex = 0;
					if (images.length > 0) {
						images[currentImageIndex].style.display = 'block';
					}

					const showImage = (index) => {
						if (images.length > 0) {
							images[currentImageIndex].style.display = 'none';
							currentImageIndex = (index + images.length) % images.length;
							images[currentImageIndex].style.display = 'block';
						}
					};

					const prevButton = gallery.querySelector('.gallery-prev');
					const nextButton = gallery.querySelector('.gallery-next');

					if (prevButton && nextButton) {
						prevButton.addEventListener('click', () => {
							showImage(currentImageIndex - 1);
						});

						nextButton.addEventListener('click', () => {
							showImage(currentImageIndex + 1);
						});
					}
				});
			});
		</script>
			<script type="module" src="{{ '/js/lite-yt-embed.js' | url }}"></script>
			<script>{% getBundle "js" %}</script>
	</body>
</html>